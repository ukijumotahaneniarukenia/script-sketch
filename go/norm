<!DOCTYPE html><html lang="en">
<head profile="http://a9.com/-/spec/opensearch/1.1/">
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/-/bootstrap.min.css?v=8bec1bba3e23ecba22cffb197a2d440af410b15d" rel="stylesheet">
  <link href="/-/site.css?v=1c06040392f05dd219e0dfc303b67625a91b1c1e" rel="stylesheet">
  
  
  <title>norm - GoDoc</title>
  
    <meta name="twitter:title" content="Package norm">
    <meta property="og:title" content="Package norm">
    <meta name="description" content="Package norm contains types and functions for normalizing Unicode strings.">
    <meta name="twitter:description" content="Package norm contains types and functions for normalizing Unicode strings.">
    <meta property="og:description" content="Package norm contains types and functions for normalizing Unicode strings.">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@golang">
  
  

  

</head>
<body>
<nav class="navbar navbar-default" role="navigation">
  <div class="navbar-blm">
    Black Lives Matter.
    <a href="https://support.eji.org/give/153413/#!/donation/checkout"
       target="_blank"
       rel="noopener">Support the Equal Justice Initiative.</a>
  </div>
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/"><strong>GoDoc</strong></a>
    </div>
    <div class="collapse navbar-collapse">
      <ul class="nav navbar-nav">
          <li><a href="/">Home</a></li>
          <li><a href="/-/about">About</a></li>
      </ul>
      <form class="navbar-nav navbar-form navbar-right" id="x-search" action="/" role="search"><input class="form-control" id="x-search-query" type="text" name="q" placeholder="Search"></form>
    </div>
  </div>
</nav>
<div class="banner">
  <div class="banner-message">
    Pkg.go.dev is a new destination for Go discovery & docs. Check it out at 
  <a href="https://pkg.go.dev/golang.org/x/text/unicode/norm">pkg.go.dev/golang.org/x/text/unicode/norm</a>
 and share your feedback.
  </div>
  <div class="banner-action-container">
    <a class="banner-action" href="?redirect=on">Always use pkg.go.dev</a>
    <a class="banner-action" href="https://blog.golang.org/pkg.go.dev-2020">Learn more</a>
  </div>
</div>

<div class="container">
  
  



        <div class="clearfix" id="x-projnav">
  <a href="https://github.com/golang/text/"><strong>text:</strong></a>
  <a href="/golang.org/x/text">golang.org/x/text</a><span class="text-muted">/</span><a href="/golang.org/x/text/unicode">unicode</a><span class="text-muted">/</span><span class="text-muted">norm</span>
  
  <span class="pull-right">
    
      <a href="#pkg-index">Index</a>
      <span class="text-muted">|</span> <a href="#pkg-examples">Examples</a>
      <span class="text-muted">|</span>
    
    <a href="#pkg-files">Files</a>
    
  </span>
  
</div>

        <h2 id="pkg-overview">package norm</h2>

        <p><code>import "golang.org/x/text/unicode/norm"</code>

        <p>
Package norm contains types and functions for normalizing Unicode strings.</p>


        
  


        
        <h3 id="pkg-index" class="section-header">Index <a class="permalink" href="#pkg-index">&para;</a></h3>

        

        <ul class="list-unstyled">
          <li><a href="#pkg-constants">Constants</a></li>
          
          
          
            <li><a href="#Form">type Form</a></li>
            <ul>
            
            <li><a href="#Form.Append">func (f Form) Append(out []byte, src ...byte) []byte</a></li><li><a href="#Form.AppendString">func (f Form) AppendString(out []byte, src string) []byte</a></li><li><a href="#Form.Bytes">func (f Form) Bytes(b []byte) []byte</a></li><li><a href="#Form.FirstBoundary">func (f Form) FirstBoundary(b []byte) int</a></li><li><a href="#Form.FirstBoundaryInString">func (f Form) FirstBoundaryInString(s string) int</a></li><li><a href="#Form.IsNormal">func (f Form) IsNormal(b []byte) bool</a></li><li><a href="#Form.IsNormalString">func (f Form) IsNormalString(s string) bool</a></li><li><a href="#Form.LastBoundary">func (f Form) LastBoundary(b []byte) int</a></li><li><a href="#Form.NextBoundary">func (f Form) NextBoundary(b []byte, atEOF bool) int</a></li><li><a href="#Form.NextBoundaryInString">func (f Form) NextBoundaryInString(s string, atEOF bool) int</a></li><li><a href="#Form.Properties">func (f Form) Properties(s []byte) Properties</a></li><li><a href="#Form.PropertiesString">func (f Form) PropertiesString(s string) Properties</a></li><li><a href="#Form.QuickSpan">func (f Form) QuickSpan(b []byte) int</a></li><li><a href="#Form.QuickSpanString">func (f Form) QuickSpanString(s string) int</a></li><li><a href="#Form.Reader">func (f Form) Reader(r io.Reader) io.Reader</a></li><li><a href="#Form.Reset">func (Form) Reset()</a></li><li><a href="#Form.Span">func (f Form) Span(b []byte, atEOF bool) (n int, err error)</a></li><li><a href="#Form.SpanString">func (f Form) SpanString(s string, atEOF bool) (n int, err error)</a></li><li><a href="#Form.String">func (f Form) String(s string) string</a></li><li><a href="#Form.Transform">func (f Form) Transform(dst, src []byte, atEOF bool) (nDst, nSrc int, err error)</a></li><li><a href="#Form.Writer">func (f Form) Writer(w io.Writer) io.WriteCloser</a></li>
            </ul>
          
            <li><a href="#Iter">type Iter</a></li>
            <ul>
            
            <li><a href="#Iter.Done">func (i *Iter) Done() bool</a></li><li><a href="#Iter.Init">func (i *Iter) Init(f Form, src []byte)</a></li><li><a href="#Iter.InitString">func (i *Iter) InitString(f Form, src string)</a></li><li><a href="#Iter.Next">func (i *Iter) Next() []byte</a></li><li><a href="#Iter.Pos">func (i *Iter) Pos() int</a></li><li><a href="#Iter.Seek">func (i *Iter) Seek(offset int64, whence int) (int64, error)</a></li>
            </ul>
          
            <li><a href="#Properties">type Properties</a></li>
            <ul>
            
            <li><a href="#Properties.BoundaryAfter">func (p Properties) BoundaryAfter() bool</a></li><li><a href="#Properties.BoundaryBefore">func (p Properties) BoundaryBefore() bool</a></li><li><a href="#Properties.CCC">func (p Properties) CCC() uint8</a></li><li><a href="#Properties.Decomposition">func (p Properties) Decomposition() []byte</a></li><li><a href="#Properties.LeadCCC">func (p Properties) LeadCCC() uint8</a></li><li><a href="#Properties.Size">func (p Properties) Size() int</a></li><li><a href="#Properties.TrailCCC">func (p Properties) TrailCCC() uint8</a></li>
            </ul>
          
          
        </ul>

        
        
          <h4 id="pkg-examples">Examples <a class="permalink" href="#pkg-examples">&para;</a></h4>
          <ul class="list-unstyled">
            <li><a href="#example-Form-NextBoundary" onclick="$('#ex-Form-NextBoundary').addClass('in').removeClass('collapse').height('auto')">Form.NextBoundary</a></li><li><a href="#example-Iter" onclick="$('#ex-Iter').addClass('in').removeClass('collapse').height('auto')">Iter</a></li>
          </ul>
        

        
        
<h4 id="pkg-files">
  <a href="https://github.com/golang/text/tree/master/unicode/norm">Package Files</a>
  <a class="permalink" href="#pkg-files">&para;</a>
</h4>

<p><a href="https://github.com/golang/text/blob/master/unicode/norm/composition.go">composition.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go">forminfo.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/input.go">input.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/iter.go">iter.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go">normalize.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/readwriter.go">readwriter.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/tables12.0.0.go">tables12.0.0.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/transform.go">transform.go</a> <a href="https://github.com/golang/text/blob/master/unicode/norm/trie.go">trie.go</a> </p>

        
        
          <h3 id="pkg-constants">Constants <a class="permalink" href="#pkg-constants">&para;</a></h3>
          <div class="decl" data-kind="c"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/tables12.0.0.go#L9">❖</a><pre>const (
    <span class="com">// Version is the Unicode edition from which the tables are derived.</span>
    <span id="Version">Version</span> = &#34;12.0.0&#34;

    <span class="com">// MaxTransformChunkSize indicates the maximum number of bytes that Transform
    // may need to write atomically for any Form. Making a destination buffer at
    // least this size ensures that Transform can always make progress and that
    // the user does not need to grow the buffer on an ErrShortDst.</span>
    <span id="MaxTransformChunkSize">MaxTransformChunkSize</span> = 35 + maxNonStarters*4
)</pre></div><div class="decl" data-kind="c"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/composition.go#L91">❖</a><pre>const <span id="GraphemeJoiner">GraphemeJoiner</span> = &#34;\u034F&#34;</pre></div><p>
GraphemeJoiner is inserted after maxNonStarters non-starter runes.
</p>
<div class="decl" data-kind="c"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L14">❖</a><pre>const <span id="MaxSegmentSize">MaxSegmentSize</span> = maxByteBufferSize</pre></div><p>
MaxSegmentSize is the maximum size of a byte buffer needed to consider any
sequence of starter and non-starter runes for the purpose of normalization.
</p>

        

        
        

        
        
        

        
        

        
          <h3 id="Form" data-kind="t">type <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L34">Form</a> <a class="permalink" href="#Form">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Form&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L34">❖</a><pre>type Form <a href="/builtin#int">int</a></pre></div><p>
A Form denotes a canonical representation of Unicode code points.
The Unicode-defined normalization and equivalence forms are:
</p>
<pre>NFC   Unicode Normalization Form C
NFD   Unicode Normalization Form D
NFKC  Unicode Normalization Form KC
NFKD  Unicode Normalization Form KD
</pre>
<p>
For a Form f, this documentation uses the notation f(x) to mean
the bytes or string x converted to the given form.
A position n in x is called a boundary if conversion to the form can
proceed independently on both sides:
</p>
<pre>f(x) == append(f(x[0:n]), f(x[n:])...)
</pre>
<p>
References: <a href="https://unicode.org/reports/tr15/">https://unicode.org/reports/tr15/</a> and
<a href="https://unicode.org/notes/tn5/">https://unicode.org/notes/tn5/</a>.
</p>

          <div class="decl" data-kind="c"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L36">❖</a><pre>const (
    <span id="NFC">NFC</span> <a href="#Form">Form</a> = <a href="/builtin#iota">iota</a>
    <span id="NFD">NFD</span>
    <span id="NFKC">NFKC</span>
    <span id="NFKD">NFKD</span>
)</pre></div>
          
          
  


          

          
            <h4 id="Form.Append" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L192">Append</a> <a class="permalink" href="#Form.Append">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FAppend&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L192">❖</a><pre>func (f <a href="#Form">Form</a>) Append(out []<a href="/builtin#byte">byte</a>, src ...<a href="/builtin#byte">byte</a>) []<a href="/builtin#byte">byte</a></pre></div><p>
Append returns f(append(out, b...)).
The buffer out must be nil, empty, or equal to f(out).
</p>

            
  

          
            <h4 id="Form.AppendString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L260">AppendString</a> <a class="permalink" href="#Form.AppendString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FAppendString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L260">❖</a><pre>func (f <a href="#Form">Form</a>) AppendString(out []<a href="/builtin#byte">byte</a>, src <a href="/builtin#string">string</a>) []<a href="/builtin#byte">byte</a></pre></div><p>
AppendString returns f(append(out, []byte(s))).
The buffer out must be nil, empty, or equal to f(out).
</p>

            
  

          
            <h4 id="Form.Bytes" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L44">Bytes</a> <a class="permalink" href="#Form.Bytes">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FBytes&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L44">❖</a><pre>func (f <a href="#Form">Form</a>) Bytes(b []<a href="/builtin#byte">byte</a>) []<a href="/builtin#byte">byte</a></pre></div><p>
Bytes returns f(b). May return b if f(b) = b.
</p>

            
  

          
            <h4 id="Form.FirstBoundary" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L365">FirstBoundary</a> <a class="permalink" href="#Form.FirstBoundary">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FFirstBoundary&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L365">❖</a><pre>func (f <a href="#Form">Form</a>) FirstBoundary(b []<a href="/builtin#byte">byte</a>) <a href="/builtin#int">int</a></pre></div><p>
FirstBoundary returns the position i of the first boundary in b
or -1 if b contains no boundary.
</p>

            
  

          
            <h4 id="Form.FirstBoundaryInString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L399">FirstBoundaryInString</a> <a class="permalink" href="#Form.FirstBoundaryInString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FFirstBoundaryInString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L399">❖</a><pre>func (f <a href="#Form">Form</a>) FirstBoundaryInString(s <a href="/builtin#string">string</a>) <a href="/builtin#int">int</a></pre></div><p>
FirstBoundaryInString returns the position i of the first boundary in s
or -1 if s contains no boundary.
</p>

            
  

          
            <h4 id="Form.IsNormal" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L72">IsNormal</a> <a class="permalink" href="#Form.IsNormal">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FIsNormal&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L72">❖</a><pre>func (f <a href="#Form">Form</a>) IsNormal(b []<a href="/builtin#byte">byte</a>) <a href="/builtin#bool">bool</a></pre></div><p>
IsNormal returns true if b == f(b).
</p>

            
  

          
            <h4 id="Form.IsNormalString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L111">IsNormalString</a> <a class="permalink" href="#Form.IsNormalString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FIsNormalString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L111">❖</a><pre>func (f <a href="#Form">Form</a>) IsNormalString(s <a href="/builtin#string">string</a>) <a href="/builtin#bool">bool</a></pre></div><p>
IsNormalString returns true if s == f(s).
</p>

            
  

          
            <h4 id="Form.LastBoundary" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L457">LastBoundary</a> <a class="permalink" href="#Form.LastBoundary">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FLastBoundary&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L457">❖</a><pre>func (f <a href="#Form">Form</a>) LastBoundary(b []<a href="/builtin#byte">byte</a>) <a href="/builtin#int">int</a></pre></div><p>
LastBoundary returns the position i of the last boundary in b
or -1 if b contains no boundary.
</p>

            
  

          
            <h4 id="Form.NextBoundary" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L406">NextBoundary</a> <a class="permalink" href="#Form.NextBoundary">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FNextBoundary&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L406">❖</a><pre>func (f <a href="#Form">Form</a>) NextBoundary(b []<a href="/builtin#byte">byte</a>, atEOF <a href="/builtin#bool">bool</a>) <a href="/builtin#int">int</a></pre></div><p>
NextBoundary reports the index of the boundary between the first and next
segment in b or -1 if atEOF is false and there are not enough bytes to
determine this boundary.
</p>

            
  
    <div class="panel-group">
    
      <div class="panel panel-default" id="example-Form-NextBoundary">
        <div class="panel-heading"><a class="accordion-toggle" data-toggle="collapse" href="#ex-Form-NextBoundary">Example</a></div>
        <div id="ex-Form-NextBoundary" class="panel-collapse collapse"><div class="panel-body">
          
          <p>Code:
          <pre>s := norm.NFD.String(&#34;Mêlée&#34;)

for i := 0; i &lt; len(s); {
    d := norm.NFC.NextBoundaryInString(s[i:], true)
    fmt.Printf(&#34;%[1]s: %+[1]q\n&#34;, s[i:i+d])
    i += d
}</pre>
          <p>Output:<pre>M: &#34;M&#34;
ê: &#34;e\u0302&#34;
l: &#34;l&#34;
é: &#34;e\u0301&#34;
e: &#34;e&#34;
</pre>
        </div></div>
      </div>
    
    </div>
  

          
            <h4 id="Form.NextBoundaryInString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L413">NextBoundaryInString</a> <a class="permalink" href="#Form.NextBoundaryInString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FNextBoundaryInString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L413">❖</a><pre>func (f <a href="#Form">Form</a>) NextBoundaryInString(s <a href="/builtin#string">string</a>, atEOF <a href="/builtin#bool">bool</a>) <a href="/builtin#int">int</a></pre></div><p>
NextBoundaryInString reports the index of the boundary between the first and
next segment in b or -1 if atEOF is false and there are not enough bytes to
determine this boundary.
</p>

            
  

          
            <h4 id="Form.Properties" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L224">Properties</a> <a class="permalink" href="#Form.Properties">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FProperties&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L224">❖</a><pre>func (f <a href="#Form">Form</a>) Properties(s []<a href="/builtin#byte">byte</a>) <a href="#Properties">Properties</a></pre></div><p>
Properties returns properties for the first rune in s.
</p>

            
  

          
            <h4 id="Form.PropertiesString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L232">PropertiesString</a> <a class="permalink" href="#Form.PropertiesString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FPropertiesString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L232">❖</a><pre>func (f <a href="#Form">Form</a>) PropertiesString(s <a href="/builtin#string">string</a>) <a href="#Properties">Properties</a></pre></div><p>
PropertiesString returns properties for the first rune in s.
</p>

            
  

          
            <h4 id="Form.QuickSpan" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L266">QuickSpan</a> <a class="permalink" href="#Form.QuickSpan">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FQuickSpan&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L266">❖</a><pre>func (f <a href="#Form">Form</a>) QuickSpan(b []<a href="/builtin#byte">byte</a>) <a href="/builtin#int">int</a></pre></div><p>
QuickSpan returns a boundary n such that b[0:n] == f(b[0:n]).
It is not guaranteed to return the largest such n.
</p>

            
  

          
            <h4 id="Form.QuickSpanString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L358">QuickSpanString</a> <a class="permalink" href="#Form.QuickSpanString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FQuickSpanString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L358">❖</a><pre>func (f <a href="#Form">Form</a>) QuickSpanString(s <a href="/builtin#string">string</a>) <a href="/builtin#int">int</a></pre></div><p>
QuickSpanString returns a boundary n such that s[0:n] == f(s[0:n]).
It is not guaranteed to return the largest such n.
</p>

            
  

          
            <h4 id="Form.Reader" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/readwriter.go#L119">Reader</a> <a class="permalink" href="#Form.Reader">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FReader&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/readwriter.go#L119">❖</a><pre>func (f <a href="#Form">Form</a>) Reader(r <a href="/io">io</a>.<a href="/io#Reader">Reader</a>) <a href="/io">io</a>.<a href="/io#Reader">Reader</a></pre></div><p>
Reader returns a new reader that implements Read
by reading data from r and returning f(data).
</p>

            
  

          
            <h4 id="Form.Reset" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/transform.go#L14">Reset</a> <a class="permalink" href="#Form.Reset">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FReset&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/transform.go#L14">❖</a><pre>func (<a href="#Form">Form</a>) Reset()</pre></div><p>
Reset implements the Reset method of the transform.Transformer interface.
</p>

            
  

          
            <h4 id="Form.Span" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L273">Span</a> <a class="permalink" href="#Form.Span">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FSpan&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L273">❖</a><pre>func (f <a href="#Form">Form</a>) Span(b []<a href="/builtin#byte">byte</a>, atEOF <a href="/builtin#bool">bool</a>) (n <a href="/builtin#int">int</a>, err <a href="/builtin#error">error</a>)</pre></div><p>
Span implements transform.SpanningTransformer. It returns a boundary n such
that b[0:n] == f(b[0:n]). It is not guaranteed to return the largest such n.
</p>

            
  

          
            <h4 id="Form.SpanString" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L287">SpanString</a> <a class="permalink" href="#Form.SpanString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FSpanString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L287">❖</a><pre>func (f <a href="#Form">Form</a>) SpanString(s <a href="/builtin#string">string</a>, atEOF <a href="/builtin#bool">bool</a>) (n <a href="/builtin#int">int</a>, err <a href="/builtin#error">error</a>)</pre></div><p>
SpanString returns a boundary n such that s[0:n] == f(s[0:n]).
It is not guaranteed to return the largest such n.
</p>

            
  

          
            <h4 id="Form.String" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L58">String</a> <a class="permalink" href="#Form.String">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/normalize.go#L58">❖</a><pre>func (f <a href="#Form">Form</a>) String(s <a href="/builtin#string">string</a>) <a href="/builtin#string">string</a></pre></div><p>
String returns f(s).
</p>

            
  

          
            <h4 id="Form.Transform" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/transform.go#L20">Transform</a> <a class="permalink" href="#Form.Transform">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FTransform&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/transform.go#L20">❖</a><pre>func (f <a href="#Form">Form</a>) Transform(dst, src []<a href="/builtin#byte">byte</a>, atEOF <a href="/builtin#bool">bool</a>) (nDst, nSrc <a href="/builtin#int">int</a>, err <a href="/builtin#error">error</a>)</pre></div><p>
Transform implements the Transform method of the transform.Transformer
interface. It may need to write segments of up to MaxSegmentSize at once.
Users should either catch ErrShortDst and allow dst to grow or have dst be at
least of size MaxTransformChunkSize to be guaranteed of progress.
</p>

            
  

          
            <h4 id="Form.Writer" data-kind="m">func (Form) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/readwriter.go#L66">Writer</a> <a class="permalink" href="#Form.Writer">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Form%2FWriter&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/readwriter.go#L66">❖</a><pre>func (f <a href="#Form">Form</a>) Writer(w <a href="/io">io</a>.<a href="/io#Writer">Writer</a>) <a href="/io">io</a>.<a href="/io#WriteCloser">WriteCloser</a></pre></div><p>
Writer returns a new writer that implements Write(b)
by writing f(b) to w. The returned writer may use an
internal buffer to maintain state across Write calls.
Calling its Close method writes any buffered data to w.
</p>

            
  

          
        
          <h3 id="Iter" data-kind="t">type <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L18">Iter</a> <a class="permalink" href="#Iter">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Iter&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L18">❖</a><pre>type Iter struct {
    <span class="com">// contains filtered or unexported fields</span>
}</pre></div><p>
An Iter iterates over a string or byte slice, while normalizing it
to a given Form.
</p>

          
          
          
  
    <div class="panel-group">
    
      <div class="panel panel-default" id="example-Iter">
        <div class="panel-heading"><a class="accordion-toggle" data-toggle="collapse" href="#ex-Iter">Example</a></div>
        <div id="ex-Iter" class="panel-collapse collapse"><div class="panel-body">
          
          <p>Code:
          <pre>package main

import (
    &#34;bytes&#34;
    &#34;fmt&#34;
    &#34;io&#34;
    &#34;unicode/utf8&#34;

    &#34;golang.org/x/text/unicode/norm&#34;
)

<span class="com">// EqualSimple uses a norm.Iter to compare two non-normalized
// strings for equivalence.</span>
func EqualSimple(a, b string) bool {
    var ia, ib norm.Iter
    ia.InitString(norm.NFKD, a)
    ib.InitString(norm.NFKD, b)
    for !ia.Done() &amp;&amp; !ib.Done() {
        if !bytes.Equal(ia.Next(), ib.Next()) {
            return false
        }
    }
    return ia.Done() &amp;&amp; ib.Done()
}

<span class="com">// FindPrefix finds the longest common prefix of ASCII characters
// of a and b.</span>
func FindPrefix(a, b string) int {
    i := 0
    for ; i &lt; len(a) &amp;&amp; i &lt; len(b) &amp;&amp; a[i] &lt; utf8.RuneSelf &amp;&amp; a[i] == b[i]; i++ {
    }
    return i
}

<span class="com">// EqualOpt is like EqualSimple, but optimizes the special
// case for ASCII characters.</span>
func EqualOpt(a, b string) bool {
    n := FindPrefix(a, b)
    a, b = a[n:], b[n:]
    var ia, ib norm.Iter
    ia.InitString(norm.NFKD, a)
    ib.InitString(norm.NFKD, b)
    for !ia.Done() &amp;&amp; !ib.Done() {
        if !bytes.Equal(ia.Next(), ib.Next()) {
            return false
        }
        if n := int64(FindPrefix(a[ia.Pos():], b[ib.Pos():])); n != 0 {
            ia.Seek(n, io.SeekCurrent)
            ib.Seek(n, io.SeekCurrent)
        }
    }
    return ia.Done() &amp;&amp; ib.Done()
}

var compareTests = []struct{ a, b string }{
    {&#34;aaa&#34;, &#34;aaa&#34;},
    {&#34;aaa&#34;, &#34;aab&#34;},
    {&#34;a\u0300a&#34;, &#34;\u00E0a&#34;},
    {&#34;a\u0300\u0320b&#34;, &#34;a\u0320\u0300b&#34;},
    {&#34;\u1E0A\u0323&#34;, &#34;\x44\u0323\u0307&#34;},
    <span class="com">// A character that decomposes into multiple segments
    // spans several iterations.</span>
    {&#34;\u3304&#34;, &#34;\u30A4\u30CB\u30F3\u30AF\u3099&#34;},
}

func main() {
    for i, t := range compareTests {
        r0 := EqualSimple(t.a, t.b)
        r1 := EqualOpt(t.a, t.b)
        fmt.Printf(&#34;%d: %v %v\n&#34;, i, r0, r1)
    }
}
</pre>
          
        </div></div>
      </div>
    
    </div>
  


          

          
            <h4 id="Iter.Done" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L115">Done</a> <a class="permalink" href="#Iter.Done">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FDone&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L115">❖</a><pre>func (i *<a href="#Iter">Iter</a>) Done() <a href="/builtin#bool">bool</a></pre></div><p>
Done returns true if there is no more input to process.
</p>

            
  

          
            <h4 id="Iter.Init" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L32">Init</a> <a class="permalink" href="#Iter.Init">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FInit&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L32">❖</a><pre>func (i *<a href="#Iter">Iter</a>) Init(f <a href="#Form">Form</a>, src []<a href="/builtin#byte">byte</a>)</pre></div><p>
Init initializes i to iterate over src after normalizing it to Form f.
</p>

            
  

          
            <h4 id="Iter.InitString" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L48">InitString</a> <a class="permalink" href="#Iter.InitString">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FInitString&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L48">❖</a><pre>func (i *<a href="#Iter">Iter</a>) InitString(f <a href="#Form">Form</a>, src <a href="/builtin#string">string</a>)</pre></div><p>
InitString initializes i to iterate over src after normalizing it to Form f.
</p>

            
  

          
            <h4 id="Iter.Next" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L124">Next</a> <a class="permalink" href="#Iter.Next">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FNext&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L124">❖</a><pre>func (i *<a href="#Iter">Iter</a>) Next() []<a href="/builtin#byte">byte</a></pre></div><p>
Next returns f(i.input[i.Pos():n]), where n is a boundary of i.input.
For any input a and b for which f(a) == f(b), subsequent calls
to Next will return the same segments.
Modifying runes are grouped together with the preceding starter, if such a starter exists.
Although not guaranteed, n will typically be the smallest possible n.
</p>

            
  

          
            <h4 id="Iter.Pos" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L105">Pos</a> <a class="permalink" href="#Iter.Pos">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FPos&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L105">❖</a><pre>func (i *<a href="#Iter">Iter</a>) Pos() <a href="/builtin#int">int</a></pre></div><p>
Pos returns the byte position at which the next call to Next will commence processing.
</p>

            
  

          
            <h4 id="Iter.Seek" data-kind="m">func (*Iter) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L66">Seek</a> <a class="permalink" href="#Iter.Seek">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Iter%2FSeek&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/iter.go#L66">❖</a><pre>func (i *<a href="#Iter">Iter</a>) Seek(offset <a href="/builtin#int64">int64</a>, whence <a href="/builtin#int">int</a>) (<a href="/builtin#int64">int64</a>, <a href="/builtin#error">error</a>)</pre></div><p>
Seek sets the segment to be returned by the next call to Next to start
at position p.  It is the responsibility of the caller to set p to the
start of a segment.
</p>

            
  

          
        
          <h3 id="Properties" data-kind="t">type <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L40">Properties</a> <a class="permalink" href="#Properties">&para;</a> <a class="uses" title="List Uses of This Type" href="https://sourcegraph.com/-/godoc/refs?def=Properties&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h3>
          <div class="decl" data-kind="d"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L40">❖</a><pre>type Properties struct {
    <span class="com">// contains filtered or unexported fields</span>
}</pre></div><p>
Properties provides access to normalization properties of a rune.
</p>

          
          
          
  


          

          
            <h4 id="Properties.BoundaryAfter" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L107">BoundaryAfter</a> <a class="permalink" href="#Properties.BoundaryAfter">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FBoundaryAfter&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L107">❖</a><pre>func (p <a href="#Properties">Properties</a>) BoundaryAfter() <a href="/builtin#bool">bool</a></pre></div><p>
BoundaryAfter returns true if runes cannot combine with or otherwise
interact with this or previous runes.
</p>

            
  

          
            <h4 id="Properties.BoundaryBefore" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L95">BoundaryBefore</a> <a class="permalink" href="#Properties.BoundaryBefore">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FBoundaryBefore&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L95">❖</a><pre>func (p <a href="#Properties">Properties</a>) BoundaryBefore() <a href="/builtin#bool">bool</a></pre></div><p>
BoundaryBefore returns true if this rune starts a new segment and
cannot combine with any rune on the left.
</p>

            
  

          
            <h4 id="Properties.CCC" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L164">CCC</a> <a class="permalink" href="#Properties.CCC">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FCCC&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L164">❖</a><pre>func (p <a href="#Properties">Properties</a>) CCC() <a href="/builtin#uint8">uint8</a></pre></div><p>
CCC returns the canonical combining class of the underlying rune.
</p>

            
  

          
            <h4 id="Properties.Decomposition" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L147">Decomposition</a> <a class="permalink" href="#Properties.Decomposition">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FDecomposition&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L147">❖</a><pre>func (p <a href="#Properties">Properties</a>) Decomposition() []<a href="/builtin#byte">byte</a></pre></div><p>
Decomposition returns the decomposition for the underlying rune
or nil if there is none.
</p>

            
  

          
            <h4 id="Properties.LeadCCC" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L173">LeadCCC</a> <a class="permalink" href="#Properties.LeadCCC">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FLeadCCC&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L173">❖</a><pre>func (p <a href="#Properties">Properties</a>) LeadCCC() <a href="/builtin#uint8">uint8</a></pre></div><p>
LeadCCC returns the CCC of the first rune in the decomposition.
If there is no decomposition, LeadCCC equals CCC.
</p>

            
  

          
            <h4 id="Properties.Size" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L159">Size</a> <a class="permalink" href="#Properties.Size">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FSize&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L159">❖</a><pre>func (p <a href="#Properties">Properties</a>) Size() <a href="/builtin#int">int</a></pre></div><p>
Size returns the length of UTF-8 encoding of the rune.
</p>

            
  

          
            <h4 id="Properties.TrailCCC" data-kind="m">func (Properties) <a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L179">TrailCCC</a> <a class="permalink" href="#Properties.TrailCCC">&para;</a> <a class="uses" title="List Method Callers" href="https://sourcegraph.com/-/godoc/refs?def=Properties%2FTrailCCC&amp;pkg=golang.org%2Fx%2Ftext%2Funicode%2Fnorm&amp;repo=golang.org%2Fx%2Ftext">Uses</a></h4>
            <div class="funcdecl decl"><a title="View Source" href="https://github.com/golang/text/blob/master/unicode/norm/forminfo.go#L179">❖</a><pre>func (p <a href="#Properties">Properties</a>) TrailCCC() <a href="/builtin#uint8">uint8</a></pre></div><p>
TrailCCC returns the CCC of the last rune in the decomposition.
If there is no decomposition, TrailCCC equals CCC.
</p>

            
  

          
        
        




<div id="x-pkginfo">

  <form name="x-refresh" method="POST" action="/-/refresh"><input type="hidden" name="path" value="golang.org/x/text/unicode/norm"></form>
  <p>Package norm imports <a href="?imports">6 packages</a> (<a href="?import-graph">graph</a>) and is imported by <a href="?importers">944 packages</a>.
  Updated <span class="timeago" title="2020-06-17T14:33:59Z">2020-06-17</span>.
  <a href="javascript:document.getElementsByName('x-refresh')[0].submit();" title="Refresh this page from the source.">Refresh now</a>.
  <a href="?tools">Tools</a> for package owners.
  


</div>

        <div id="x-jump" tabindex="-1" class="modal">
            <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title">Jump to identifier</h4>
                <br class="clearfix">
                <input id="x-jump-filter" class="form-control" autocomplete="off" type="text">
              </div>
              <div id="x-jump-body" class="modal-body" style="height: 260px; overflow: auto;">
                <div id="x-jump-list" class="list-group" style="margin-bottom: 0;"></div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>



  

</div>
<div id="x-footer" class="clearfix">
  <div class="container">
    <a href="https://github.com/golang/gddo/issues">Website Issues</a>
    <span class="text-muted">|</span> <a href="https://golang.org/">Go Language</a>
    <span class="pull-right"><a href="#">Back to top</a></span>
  </div>
</div>

<div id="x-shortcuts" tabindex="-1" class="modal">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title">Keyboard shortcuts</h4>
        </div>
        <div class="modal-body">
          <table>
          <tr><td align="right"><b>?</b></td><td> : This menu</td></tr>
          <tr><td align="right"><b>/</b></td><td> : Search site</td></tr>
          <tr><td align="right"><b>f</b></td><td> : Jump to identifier</td></tr>
          <tr><td align="right"><b>g</b> then <b>g</b></td><td> : Go to top of page</td></tr>
          <tr><td align="right"><b>g</b> then <b>b</b></td><td> : Go to end of page</td></tr>
          <tr><td align="right"><b>g</b> then <b>i</b></td><td> : Go to index</td></tr>
          <tr><td align="right"><b>g</b> then <b>e</b></td><td> : Go to examples</td></tr>
          </table>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


<script src="/-/jquery-2.0.3.min.js?v=fbf9c77d0c4e3c34a485980c1e5316b6212160c8"></script>
<script src="/-/bootstrap.min.js?v=5ada7c103fc1deabc925cc1fdbbb6e451c21fc70"></script>
<script src="/-/site.js?v=94afef9fd5c25f0e3a814a11ce1eb118c560bdaf"></script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-11222381-8']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</body>
</html>
